{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,QAAQC,GAAzC,0BAAsEC,IAAI,YAClF,6BAAML,EAAMG,QAAQG,OACpB,4BAAKN,EAAMG,QAAQI,YCHdC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAEIA,QAAUA,GADJA,EAAQC,WCLjBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCuCJG,G,wDAxCd,aAAe,IAAD,8BACb,gBAaDH,aAAe,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO9C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YAEZU,EAAmBpB,EAASqB,QAAQ,SAAA3B,GAAO,OAChDA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGjD,OACC,sBAAK9B,UAAU,MAAf,UACC,iDACA,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAee,KAAKf,eAEpB,cAAC,EAAD,CACAJ,SAAWoB,W,GAnCGI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f411a007.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img src={ `https://robohash.org/${props.monster.id}?set=set2&size=180x180` } alt='monster'/>\n        <h2>{ props.monster.name }</h2>\n        <p>{ props.monster.email }</p>\n    </div>\n)","import React from 'react';\nimport { Card } from '../card/card.component'\nimport './card-list.style.css';\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card \n                key={ monster.id } \n                monster={ monster }\n            />\n        ))}\n    </div>\n);","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n        className='search'\n        type='search' \n        placeholder={ placeholder } \n        onChange={ handleChange }\n    />\n);","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\n\tconstructor() {\t\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\t\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then( response => response.json())\n\t\t\t.then( users => { this.setState({ monsters: users}) });\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\n\t\tconst filteredMonsters = monsters.filter( monster => \n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\tplaceholder='search monster'\n\t\t\t\thandleChange={ this.handleChange }\n\t\t\t\t/>\n\t\t\t\t<CardList \n\t\t\t\tmonsters={ filteredMonsters } \n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}